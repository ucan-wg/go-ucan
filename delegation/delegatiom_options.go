package delegation

// Code generated by github.com/selesy/go-options.  DO NOT EDIT.

import (
	"github.com/ipld/go-ipld-prime/datamodel"
	"github.com/ucan-wg/go-ucan/did"
	"time"
)

type Option func(c *config) error

func newConfig(options ...Option) (config, error) {
	var c config
	err := applyConfigOptions(&c, options...)
	return c, err
}

func applyConfigOptions(c *config, options ...Option) error {
	for _, o := range options {
		if err := o(c); err != nil {
			return err
		}
	}
	return nil
}

func WithExpiration(o *time.Time) Option {
	return func(c *config) error {
		c.Expiration = o
		return nil
	}
}

func WithMeta(o map[string]datamodel.Node) Option {
	return func(c *config) error {
		c.Meta = o
		return nil
	}
}

func WithNoExpiration(o bool) Option {
	return func(c *config) error {
		c.NoExpiration = o
		return nil
	}
}

func WithNotBefore(o *time.Time) Option {
	return func(c *config) error {
		c.NotBefore = o
		return nil
	}
}

// WithSubject is a did.DID representing the Subject.
func WithSubject(o *did.DID) Option {
	return func(c *config) error {
		c.Subject = o
		return nil
	}
}

func WithPowerline(o bool) Option {
	return func(c *config) error {
		c.Powerline = o
		return nil
	}
}
